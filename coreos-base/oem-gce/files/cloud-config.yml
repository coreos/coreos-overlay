#cloud-config

coreos:
    units:
      - name: gce-add-metadata-host.service
        command: start
        runtime: yes
        content: |
          [Unit]
          Description=Setup metadata in /etc/hosts

          [Service]
          ExecStart=/usr/share/oem/bin/gce-add-metadata-host
      - name: gce-coreos-cloudinit.service
        command: restart
        runtime: yes
        content: |
          [Unit]
          Requires=coreos-setup-environment.service
          After=coreos-setup-environment.service

          [Service]
          Type=oneshot
          EnvironmentFile=/etc/environment
          ExecStart=/usr/share/oem/bin/gce-coreos-cloudinit
      - name: gce-ssh-key.service
        command: restart
        runtime: yes
        content: |
          [Unit]
          Description=Sets SSH key from metadata

          [Service]
          Type=oneshot
          StandardOutput=journal+console
          ExecStart=/usr/share/oem/bin/gce-ssh-key
      - name: google-accounts-manager.service
        command: start
        runtime: yes
        content: |
          [Unit]
          Description=Google Compute Engine User Accounts Manager Daemon
          After=network.target
          Before=sshd.service
          Requires=network.target
 
          [Service]
          Type=simple
          ExecStart=/usr/share/oem/python/bin/python2.7 /usr/share/oem/google-compute-daemon/manage_accounts.py

          [Install]
          WantedBy=multi-user.target
      - name: google-address-manager.service
        command: start
        runtime: yes
        content: |
          [Unit]
          Description=Google Compute Engine Address Manager Daemon
          After=network.target
          Requires=network.target

          [Service]
          Type=simple
          ExecStart=/usr/share/oem/python/bin/python2.7 /usr/share/oem/google-compute-daemon/manage_addresses.py

          [Install]
          WantedBy=multi-user.target
      - name: google-startup-scripts-onboot.service
        command: start
        runtime: yes
        content: |
          [Unit]
          Description=Google Compute Engine Startup Scripts
          After=network.target
          After=local-fs.target
          Before=sshd.service
          Requires=network.target
          Requires=local-fs.target

          [Service]
          Type=oneshot
          Environment=GOOGLE_STARTUP_SCRIPTS_PREFIX=/usr/share/oem/google-startup-scripts
          ExecStart=/usr/share/oem/google-startup-scripts/onboot

          [Install]
          WantedBy=multi-user.target
      - name: google-startup-scripts.service
        command: start
        runtime: yes
        content: |
          [Unit]
          Description=Google Compute Engine user startup scripts
          After=network.target
          After=google-startup-scripts-onboot.service
          Requires=google-startup-scripts-onboot.service
          Requires=network.target

          [Service]
          ExecStart=/usr/share/oem/google-startup-scripts/run-startup-scripts
          Type=idle

          [Install]
          WantedBy=multi-user.target

    oem:
      id: gce
      name: Google Compute Engine
      home-url: https://cloud.google.com/products/compute-engine/
      bug-report-url: https://github.com/coreos/bugs/issues

write_files:
  - path: /etc/profile.d/google-cloud-sdk.sh
    permissions: 0644
    content: |
        #!/bin/sh
        function _fake_gcloud {
        cat >&2 <<EOF
        gcloud, gcutil, and other Google Cloud SDK tools are available from
        Google via a Docker container named google/cloud-sdk.

        See https://index.docker.io/u/google/cloud-sdk/
        EOF
        return 1
        }

        alias gcloud=_fake_gcloud
        alias gcutil=_fake_gcloud
        alias gsutil=_fake_gcloud
